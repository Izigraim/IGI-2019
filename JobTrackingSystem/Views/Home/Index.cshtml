@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using JobTrackingSystem.ViewModels
@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html>
<head>
    <title>@Localizer["Tasks"]</title>
</head>
<body>
    <h3>@Localizer["ListOfTasks"]</h3>
    <form method="get">
        <div class="form-inline">
            <label class="control-label">@Localizer["FilterName"] </label>
            @Html.TextBox("name", Model.FilterViewModel.SelectedName, htmlAttributes: new { @class = "form-control" })
            <input type="submit" value="@Localizer["Filter"]" class="btn btn-default" /> |
            <a asp-action="Index" asp-controller="Home">@Localizer["BackToList"]</a>

        </div>
    </form>
    @if (User.Identity.IsAuthenticated)
    {
        <div>
            <a asp-action="Create">@Localizer["Add"]</a>
        </div>
    }
    <table class="table">
        <thead>
            <tr>
                <td>@Localizer["Task"]</td>
                <td>@Localizer["Status"]</td>
                <td>@Localizer["WhoGave"]</td>
                <td><a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.DateOfTakingSort)" asp-route-name="@(Model.FilterViewModel.SelectedName)">@Localizer["Date1"]</a></td>
                <td>@Localizer["WhoTake"]</td>
                <td>@Localizer["Date2"]</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.trackingTasks)
            {
                <tr>
                    <td><a asp-controller="Home" asp-action="Details" asp-route-id="@task.Id">@task.ShortDescription</a></td>
                    <td>@task.status</td>
                    <td>@task.whoGave.Nickname</td>
                    <td>@task.dateOfTaking</td>
                    <td>@task.whoTake?.Nickname</td>
                    <td>@task.dateOfFinishing</td>
                    @if (User.Identity.IsAuthenticated && task.whoTake == null)
                    {
                        <td><a class="btn btn-sm btn-primary" asp-controller="Home" asp-action="TakeTask" asp-route-id="@task.Id">@Localizer["Take"]</a></td>
                    }
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        @if (task.dateOfFinishing == null && task.whoTake == null)
                        {
                            <td><a class="btn btn-sm btn-default" asp-controller="Home" asp-action="Edit" asp-route-id="@task.Id">@Localizer["Edit"]</a></td>
                        }
                        <td><a class="btn btn-sm btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@task.Id">@Localizer["Delete"]</a></td>
                    }
                </tr>
            }
        </tbody>
    </table>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-company="@(Model.FilterViewModel.SelectedTask)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-default btn">
            <i class="glyphicon glyphicon-chevron-left"></i>
            @Localizer["Back"]
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
<a asp-action="Index"
   asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
   asp-route-name="@(Model.FilterViewModel.SelectedName)"
   asp-route-company="@(Model.FilterViewModel.SelectedTask)"
   asp-route-sortorder="@(Model.SortViewModel.Current)"
   class="btn btn-default btn">
    @Localizer["Next"]
    <i class="glyphicon glyphicon-chevron-right"></i>
</a>
    }
    <div class="demo"></div>

    <h3>@Localizer["Actions"]:</h3>
    <div id="notify"></div>
    <textarea id="area1" cols="100" rows="10" readonly>@ViewBag.logs</textarea>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/pushnot").build();

        connection.on('Notify', function (message) {

            //let elem = document.createElement("p");
            //elem.appendChild(document.createTextNode(message));
            //document.getElementById("notify").appendChild(elem);

            let elem1 = document.createTextNode(message);
            document.getElementById("area1").value += elem1.textContent;
            document.getElementById("area1").value += '\n';
        });
        connection.start();
    </script>


</body>
</html>